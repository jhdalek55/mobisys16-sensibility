"""
An accelerometer benchmark script for you!

First, `uploaddir` its containing directory to your device.
Then, typically,

you@target !> start dylink.r2py encasementlib.r2py sensor_layer.r2py seclayer-init.r2py YOUR_SECURITY_LAYER.r2py NUMBER_OF_LAYERS_TO_STACK accel-foo.r2py

(like start dylink.r2py encasementlib.r2py sensor_layer.r2py seclayer-init.r2py blur-round.r2py 50 accel-foo.r2py)

* dylink gives you dy_import_module if you need it,
* encasementlib adds non-bypasseable security layers,
* sensor_layer adds sensor calls to the RepyV2 API,
* seclayer-init initializes the security layer,
* YOUR_SECURITY_LAYER is your security layer, e.g. blur-noop.r2py
* NUMBER_OF_LAYERS_TO_STACK defines how many "interim" layers of calls 
  there will be for the sensor call you override, and
* accel-foo is this humble program.
"""

librepyfile = dy_import_module("librepyfile.r2py")

logfilename = callargs[0]

log("Started", getruntime())

OUTER_ITER = 10
INNER_ITER = 1000

log("StopSense")
stop_sensing()

log("StartSense")
start_sensing(2, 0)

log("Go!\n")

logfile = librepyfile.open(logfilename)
logfile.seek(logfile.size())

for j in xrange(OUTER_ITER):
  loop_started = getruntime()
  for i in xrange(INNER_ITER):
    xyz = get_acceleration()
    logfile.write(str(xyz) + "\n")

  loop_stopped = getruntime()

  log(loop_stopped - loop_started, "\n")

log("Done.", getruntime(), "\n")

logfile.flush()
logfile.close()
